name: Native Executables Release

on:
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string
    secrets:
      token:
        required: true

permissions:
  contents: write
  pull-requests: write
  packages: write
  
jobs:
  build:
    name: Build Native Executable - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output_name: deepdesk-linux
          - os: macos-latest
            output_name: deepdesk-macos
          - os: windows-latest
            output_name: deepdesk-windows.exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23'
          distribution: 'graalvm'
          github-token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build with Maven (Native) - Unix
        if: matrix.os != 'windows-latest'
        run: ./mvnw -B clean package -Pnative -DskipTests

      - name: Build with Maven (Native) - Windows
        if: matrix.os == 'windows-latest'
        run: .\mvnw.cmd -B clean package -Pnative -DskipTests
        
      - name: Upload native executable (Unix)
        if: matrix.os != 'windows-latest'
        env:
          GH_TOKEN: ${{ secrets.token }}
        run: |
          mv target/deepdesk target/${{ matrix.output_name }}
          chmod +x target/${{ matrix.output_name }}
          gh release upload ${{ inputs.tag_name }} target/${{ matrix.output_name }}

      - name: Upload native executable (Windows)
        if: matrix.os == 'windows-latest'
        env:
          GH_TOKEN: ${{ secrets.token }}
        run: |
          move target\deepdesk.exe target\${{ matrix.output_name }}
          gh release upload ${{ inputs.tag_name }} target\${{ matrix.output_name }}

      - name: Upload Docs
        env:
          GH_TOKEN: ${{ secrets.token }}
        run: |
          gh release upload --clobber ${{ inputs.tag_name }} ./CHANGELOG.md
          gh release upload --clobber ${{ inputs.tag_name }} ./LICENSE

  docker:
    name: Build and Publish Docker Image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.token }}
      
      - name: Download Linux executable
        env:
          GH_TOKEN: ${{ secrets.token }}
        run: |
          mkdir -p target
          gh release download ${{ inputs.tag_name }} -p "deepdesk-linux" -O target/deepdesk-linux
          chmod +x target/deepdesk-linux
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/deepdesk:latest
            ghcr.io/${{ github.repository_owner }}/deepdesk:${{ inputs.tag_name }}
