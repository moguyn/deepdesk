name: Native Executables Release

on:
  workflow_call:

permissions:
  contents: write
  pull-requests: write
  
jobs:
  build:
    name: Build Native Executable - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output_name: deepdesk-linux
          - os: macos-latest
            output_name: deepdesk-macos
          - os: windows-latest
            output_name: deepdesk-windows.exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23'
          distribution: 'graalvm'
          github-token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build with Maven (Native) - Unix
        if: matrix.os != 'windows-latest'
        run: ./mvnw -B clean package -Pnative -DskipTests

      - name: Build with Maven (Native) - Windows
        if: matrix.os == 'windows-latest'
        run: .\mvnw.cmd -B clean package -Pnative -DskipTests
        
      - name: Rename native executable (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mv target/deepdesk target/${{ matrix.output_name }}
          chmod +x target/${{ matrix.output_name }}

      - name: Rename native executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          move target\deepdesk.exe target\${{ matrix.output_name }}

  upload-release-artifacts:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} ./target/deepdesk-*
          gh release upload ${{ steps.release.outputs.tag_name }} ./CHANGELOG.md
          gh release upload ${{ steps.release.outputs.tag_name }} ./LICENSE
