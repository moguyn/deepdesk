name: Native Executables Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'

jobs:
  build:
    name: Build Native Executable - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output_name: deepdesk-linux
          - os: macos-latest
            output_name: deepdesk-macos
          - os: windows-latest
            output_name: deepdesk-windows.exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23'
          distribution: 'graalvm'
          github-token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build with Maven (Native) - Unix
        if: matrix.os != 'windows-latest'
        run: ./mvnw -B clean package -Pnative

      - name: Build with Maven (Native) - Windows
        if: matrix.os == 'windows-latest'
        run: .\mvnw.cmd -B clean package -Pnative
        
      - name: Rename native executable (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mv target/deepdesk ${{ matrix.output_name }}
          chmod +x ${{ matrix.output_name }}

      - name: Rename native executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          move target\deepdesk.exe ${{ matrix.output_name }}

      - name: Upload Native Build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: ${{ matrix.output_name }}
          retention-days: 7

  create-release:
    name: Create Release with All Executables
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Display structure of downloaded files
        run: ls -R
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: DeepDesk Native Executables
          tag_name: native-build-${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            ./deepdesk-linux/deepdesk-linux
            ./deepdesk-macos/deepdesk-macos
            ./deepdesk-windows.exe/deepdesk-windows.exe
            ./target/deepdesk-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }} 